{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5-rrd-v6/pages/Error404.tsx","p2-homeworks/h5-rrd-v6/pages/Junior.tsx","p2-homeworks/h5-rrd-v6/pages/JuniorPlus.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5-rrd-v6/pages/PreJunior.tsx","p2-homeworks/h5-rrd-v6/Pages.tsx","p2-homeworks/h5-rrd-v6/Header.tsx","p2-homeworks/h5-rrd-v6/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Error404","className","Junior","JuniorPlus","Message","props","src","avatar","alt","name","message","time","messageData","HW1","Affair","textValue","s","Hight","affair","priority","Middle","Low","string","onClick","deleteAffairCallback","_id","buttonList","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","el","filterAffairs","someClass","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","noError","valueHandler","mainDiv","value","onChange","onKeyPress","e","textError","disabled","counterNum","GreetingContainer","users","addUserCallback","setName","setError","length","currentTarget","alert","trim","HW3","setUsers","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","noErrorInput","errorInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","PreJunior","PATH","Pages","path","element","to","Header","id","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.0a8d8c8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__3VO6p\",\"string\":\"Affairs_string__3Jgzj\",\"Middle\":\"Affairs_Middle__33c6h\",\"Hight\":\"Affairs_Hight__1uIH6\",\"Low\":\"Affairs_Low__2zJSY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDiv\":\"Greeting_mainDiv__1ExVj\",\"error\":\"Greeting_error__2-Q2e\",\"noError\":\"Greeting_noError__3T7Z8\",\"textError\":\"Greeting_textError__1etJz\",\"counterNum\":\"Greeting_counterNum__1oYBu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__des07\",\"noErrorInput\":\"SuperInputText_noErrorInput__reVFD\",\"errorInput\":\"SuperInputText_errorInput__1-nX2\",\"error\":\"SuperInputText_error__Clkr-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3tXXa\",\"red\":\"SuperButton_red__1rFAy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1fv_h\",\"column\":\"HW4_column__5pz3a\",\"testSpanError\":\"HW4_testSpanError__3NQXQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3KqKF\",\"spanClassName\":\"SuperCheckbox_spanClassName__1HBX4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1uT6I\"};","import React from \"react\";\r\nimport \"./Error404.css\";\r\n\r\nfunction Error404() {\r\n  return (\r\n    <div className=\"Block404\">\r\n      <h1>404</h1>\r\n      <span>Page not found!</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error404;\r\n","import React from \"react\";\r\nimport HW10 from \"../../h10/HW10\";\r\nimport HW11 from \"../../h11/HW11\";\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW8 from \"../../h8/HW8\";\r\nimport HW9 from \"../../h9/HW9\";\r\n\r\nfunction Junior() {\r\n  return (\r\n    <div>\r\n      {/* <HW7/>\r\n            <HW8/>\r\n            <HW9/>\r\n            <HW10/>\r\n            <HW11/> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Junior;\r\n","import React from \"react\";\r\nimport HW12 from \"../../h12/HW12\";\r\n\r\nfunction JuniorPlus() {\r\n  return <div>{/* <HW12/> */}</div>;\r\n}\r\n\r\nexport default JuniorPlus;\r\n","import React from \"react\";\r\nimport \"./Messages.css\";\r\n\r\ntype MessagePropsType = {\r\n  avatar: string;\r\n  name: string;\r\n  message: string;\r\n  time: string;\r\n};\r\n\r\nfunction Message(props: MessagePropsType) {\r\n  return (\r\n    <div className=\"forBackground\">\r\n      <div className=\"commentArea\">\r\n        <img src={props.avatar} alt=\"\" className=\"avatarka\" />\r\n        <div className=\"comment\">\r\n          <span className=\"userName\">{props.name}</span>\r\n          <span> {props.message}</span>\r\n          <span className=\"timeMessage\">{props.time}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n  avatar:\r\n    \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\r\n  name: \"Some Name\",\r\n  message: \"some text\",\r\n  time: \"22:00\",\r\n};\r\n\r\nfunction HW1() {\r\n  return (\r\n    <div>\r\n      <hr />\r\n      homeworks 1{/*should work (должно работать)*/}\r\n      <Message\r\n        avatar={messageData.avatar}\r\n        name={messageData.name}\r\n        message={messageData.message}\r\n        time={messageData.time}\r\n      />\r\n      <hr />\r\n      {/*для личного творчества, могу проверить*/}\r\n      {/*<AlternativeMessage/>*/}\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HW1;\r\n","import React from \"react\";\r\nimport s from \"./Affairs.module.css\";\r\n\r\ntype AffairPropsType = {\r\n  // key не нужно типизировать\r\n  affair: {\r\n    _id: number;\r\n    name: string;\r\n    priority: \"high\" | \"middle\" | \"low\" | \"all\";\r\n  }; // need to fix any\r\n  deleteAffairCallback: (idNum: number) => void; // need to fix any\r\n};\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n  const deleteCallback = () => {\r\n    props.deleteAffairCallback(props.affair._id);\r\n  }; // need to fix\r\n\r\n  let textValue = s.Hight;\r\n\r\n  if (props.affair.priority === \"middle\") {\r\n    textValue = s.Middle;\r\n  }\r\n  if (props.affair.priority === \"low\") {\r\n    textValue = s.Low;\r\n  }\r\n\r\n  return (\r\n    <div className={s.string}>\r\n      {props.affair.name}\r\n      <span className={textValue}>{props.affair.priority}</span>\r\n      <button onClick={deleteCallback} className={s.buttonList}>\r\n        X\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Affair;\r\n","import React from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport s from \"./Affairs.module.css\";\r\nimport { AffairType } from \"./HW2\";\r\n\r\ntype AffairsPropsType = {\r\n  // need to fix any\r\n  data: AffairType[];\r\n  setFilter: (props: \"high\" | \"middle\" | \"low\" | \"all\") => void;\r\n  deleteAffairCallback: (idNum: number) => void;\r\n};\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n  const mappedAffairs = props.data.map((a: AffairType) => (\r\n    <Affair // should work\r\n      key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n      affair={a}\r\n      deleteAffairCallback={props.deleteAffairCallback}\r\n    />\r\n  ));\r\n\r\n  const setAll = () => {\r\n    props.setFilter(\"all\");\r\n  }; // need to fix\r\n  const setHigh = () => {\r\n    props.setFilter(\"high\");\r\n  };\r\n  const setMiddle = () => {\r\n    props.setFilter(\"middle\");\r\n  };\r\n  const setLow = () => {\r\n    props.setFilter(\"low\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>{mappedAffairs}</div>\r\n      <button onClick={setAll}>All</button>\r\n      <button onClick={setHigh}>High</button>\r\n      <button onClick={setMiddle}>Middle</button>\r\n      <button onClick={setLow}>Low</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, { useState } from \"react\";\r\nimport Affairs from \"./Affairs\";\r\nimport s from \"./Affairs.module.css\";\r\n\r\n// types\r\nexport type AffairPriorityType = \"high\" | \"middle\" | \"low\"; // need to fix any\r\nexport type AffairType = {\r\n  _id: number;\r\n  name: string;\r\n  priority: FilterType;\r\n}; // need to fix any\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\n\r\n// constants\r\nconst defaultAffairs: AffairType[] = [\r\n  // need to fix any\r\n  { _id: 1, name: \"React\", priority: \"high\" },\r\n  { _id: 2, name: \"anime\", priority: \"low\" },\r\n  { _id: 3, name: \"games\", priority: \"low\" },\r\n  { _id: 4, name: \"work\", priority: \"high\" },\r\n  { _id: 5, name: \"html & css\", priority: \"middle\" },\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (\r\n  affairs: AffairType[],\r\n  filter: FilterType\r\n): AffairType[] => {\r\n  // need to fix any\r\n\r\n  if (filter === \"all\") {\r\n    return affairs;\r\n  }\r\n  if (filter === \"high\") {\r\n    return affairs.filter((el) => el.priority === filter);\r\n  }\r\n  if (filter === \"middle\") {\r\n    return affairs.filter((el) => el.priority === filter);\r\n  }\r\n  if (filter === \"low\") {\r\n    return affairs.filter((el) => el.priority === filter);\r\n  } // need to fix\r\n  return affairs;\r\n};\r\n\r\nexport const deleteAffair = (\r\n  affairs: AffairType[],\r\n  _id: number\r\n): AffairType[] => {\r\n  // need to fix any\r\n  return affairs.filter((el) => el._id !== _id); // need to fix\r\n};\r\n\r\nfunction HW2() {\r\n  const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs); // need to fix any\r\n  const [filter, setFilter] = useState<FilterType>(\"all\");\r\n\r\n  const filteredAffairs = filterAffairs(affairs, filter);\r\n  const deleteAffairCallback = (_id: number) =>\r\n    setAffairs(deleteAffair(affairs, _id)); // need to fix any\r\n\r\n  return (\r\n    <div className={s.someClass}>\r\n      <hr />\r\n      homeworks 2{/*should work (должно работать)*/}\r\n      <Affairs\r\n        data={filteredAffairs}\r\n        setFilter={setFilter}\r\n        deleteAffairCallback={deleteAffairCallback}\r\n      />\r\n      <hr />\r\n      {/*для личного творчества, могу проверить*/}\r\n      {/*<AlternativeAffairs/>*/}\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HW2;\r\n","import React, { ChangeEvent, KeyboardEvent } from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\n\r\ntype GreetingPropsType = {\r\n  name: string; // need to fix any\r\n  setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void; // need to fix any\r\n  addUser: () => void; // need to fix any\r\n  error: string; // need to fix any\r\n  totalUsers: number; // need to fix any\r\n};\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n  { name, setNameCallback, addUser, error, totalUsers } // деструктуризация пропсов\r\n) => {\r\n  const inputClass = name ? s.noError : s.error; // need to fix with (?:)\r\n\r\n  const onKeyPressDownHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    if (name === \"\") {\r\n      return null;\r\n    }\r\n    if (e.key === \"Enter\") {\r\n      addUser();\r\n    }\r\n  };\r\n\r\n  const valueHandler = name === \"\" ? true : false;\r\n\r\n  return (\r\n    <div className={s.mainDiv}>\r\n      <div className={inputClass}>\r\n        <input\r\n          value={name}\r\n          onChange={setNameCallback}\r\n          onKeyPress={onKeyPressDownHandler}\r\n        />\r\n        <div className={s.textError}>{error}</div>\r\n      </div>\r\n\r\n      <button onClick={addUser} disabled={valueHandler}>\r\n        add\r\n      </button>\r\n      <div className={s.counterNum}>{totalUsers}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Greeting;\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport { UserType } from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n  users: UserType[]; // need to fix any\r\n  addUserCallback: (name: string) => void; // need to fix any\r\n};\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({\r\n  users,\r\n  addUserCallback,\r\n}) => {\r\n  // деструктуризация пропсов\r\n  const [name, setName] = useState<string>(\"\"); // need to fix any\r\n  const [error, setError] = useState<string>(\"\"); // need to fix any\r\n\r\n  const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    // need to fix any\r\n\r\n    if (e.currentTarget.value !== \" \") {\r\n      setName(e.currentTarget.value);\r\n      error && setError(\"\");\r\n    } else {\r\n      name && setName(\"\");\r\n      setError(\"Name is required\");\r\n    }\r\n\r\n    // need to fix\r\n  };\r\n\r\n  const addUser = () => {\r\n    alert(`Hello ${name.trim()}!`);\r\n    addUserCallback(name.trim());\r\n    setName(\"\");\r\n    // need to fix\r\n  };\r\n\r\n  const totalUsers = users.length; // need to fix\r\n\r\n  return (\r\n    <Greeting\r\n      name={name}\r\n      setNameCallback={setNameCallback}\r\n      addUser={addUser}\r\n      error={error}\r\n      totalUsers={totalUsers}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GreetingContainer;\r\n","import React, { useState } from \"react\";\r\nimport { v1 } from \"uuid\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\n\r\n// types\r\nexport type UserType = {\r\n  _id: string; // need to fix any\r\n  name: string; // need to fix any\r\n};\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n  const [users, setUsers] = useState<UserType[]>([]); // need to fix any\r\n\r\n  const addUserCallback = (name: string) => {\r\n    // need to fix any\r\n    setUsers([{ _id: v1(), name: name }, ...users]); // need to fix\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <hr />\r\n      homeworks 3{/*should work (должно работать)*/}\r\n      <GreetingContainer users={users} addUserCallback={addUserCallback} />\r\n      <hr />\r\n      {/*для личного творчества, могу проверить*/}\r\n      {/*<AlternativeGreeting/>*/}\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n  KeyboardEvent,\r\n} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n  // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void;\r\n  onEnter?: () => void;\r\n  error?: string;\r\n  spanClassName?: string;\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = ({\r\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n  onChange,\r\n  onChangeText,\r\n  onKeyPress,\r\n  onEnter,\r\n  error,\r\n  className,\r\n  spanClassName,\r\n\r\n  ...restProps // все остальные пропсы попадут в объект restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && // если есть пропс onChange\r\n      onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n    onChangeText && onChangeText(e.currentTarget.value);\r\n  };\r\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    onKeyPress && onKeyPress(e);\r\n\r\n    onEnter && // если есть пропс onEnter\r\n      e.key === \"Enter\" && // и если нажата кнопка Enter\r\n      onEnter(); // то вызвать его\r\n  };\r\n\r\n  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n  const finalInputClassName = `${s.noErrorInput}  ${\r\n    error ? s.errorInput : s.noErrorInput\r\n  } ${className}`; // need to fix with (?:) and s.superInput\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type={\"text\"}\r\n        onChange={onChangeCallback}\r\n        onKeyPress={onKeyPressCallback}\r\n        className={finalInputClassName}\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n      />\r\n      {error && <span className={finalSpanClassName}>{error}</span>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SuperInputText;\r\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<\r\n  ButtonHTMLAttributes<HTMLButtonElement>,\r\n  HTMLButtonElement\r\n>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n  red?: boolean;\r\n};\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = ({\r\n  red,\r\n  className,\r\n  ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\r\n} ) => {\r\n  const finalClassName = ` ${s.default} ${\r\n    red ? s.red : s.default\r\n  } ${className}`;\r\n\r\n  return (\r\n    <button\r\n      className={finalClassName}\r\n      {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n    />\r\n  );\r\n};\r\n\r\nexport default SuperButton;\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean | undefined) => void;\r\n  spanClassName?: string;\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = ({\r\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n  onChange,\r\n  onChangeChecked,\r\n  className,\r\n  spanClassName,\r\n  children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n  ...restProps // все остальные пропсы попадут в объект restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    // сделайте так чтоб работал onChange и onChangeChecked\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n  };\r\n\r\n  const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n  return (\r\n    <label>\r\n      <input\r\n        type={\"checkbox\"}\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n      />\r\n      {children && <span className={s.spanClassName}>{children}</span>}\r\n    </label> // благодаря label нажатие на спан передастся в инпут\r\n  );\r\n};\r\n\r\nexport default SuperCheckbox;\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n  const [text, setText] = useState<string>(\"\");\r\n  const error = text ? \"\" : \"error\";\r\n\r\n  const showAlert = () => {\r\n    if (error) {\r\n      alert(\"введите текст...\");\r\n    } else {\r\n      alert(text); // если нет ошибки показать текст\r\n    }\r\n  };\r\n\r\n  const [checked, setChecked] = useState<boolean | undefined>(false);\r\n  const testOnChange = (e: ChangeEvent<HTMLInputElement>) =>\r\n    setChecked(e.currentTarget.checked);\r\n\r\n  return (\r\n    <div>\r\n      <hr />\r\n      homeworks 4\r\n      <div className={s.column}>\r\n        <SuperInputText\r\n          value={text}\r\n          onChangeText={setText}\r\n          onEnter={showAlert}\r\n          error={error}\r\n          // spanClassName={s.testSpanError}\r\n        />\r\n\r\n        <SuperInputText\r\n          className={s.blue} // проверьте, рабоет ли смешивание классов\r\n        />\r\n\r\n        {/*----------------------------------------------------*/}\r\n\r\n        <SuperButton>default</SuperButton>\r\n\r\n        <SuperButton\r\n          red // пропсу с булевым значением не обязательно указывать true\r\n          onClick={showAlert}\r\n        >\r\n          delete {/*// название кнопки попадёт в children*/}\r\n        </SuperButton>\r\n\r\n        <SuperButton disabled>disabled</SuperButton>\r\n\r\n        {/*----------------------------------------------------*/}\r\n\r\n        <SuperCheckbox checked={checked} onChangeChecked={setChecked}>\r\n          some text {/*// этот текст попадёт в children*/}\r\n        </SuperCheckbox>\r\n\r\n        {/*// onChange тоже должен работать*/}\r\n        <SuperCheckbox checked={checked} onChange={testOnChange} />\r\n      </div>\r\n      <hr />\r\n      {/*для личного творчества, могу проверить*/}\r\n      {/*<AlternativeSuperInputText/>*/}\r\n      {/*<AlternativeSuperButton/>*/}\r\n      {/*<AlternativeSuperCheckbox/>*/}\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HW4;\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { Routes } from \"react-router-dom\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\n\r\nexport const PATH = {\r\n  PRE_JUNIOR: \"/pre-junior\",\r\n  JUNIOR: \"/junior\",\r\n  JUNIORPLUS: \"/juniorplus\",\r\n  // add paths\r\n};\r\n\r\nfunction Pages() {\r\n  return (\r\n    <div>\r\n      {/*Routes выбирает первый подходящий роут*/}\r\n      <Routes>\r\n        {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n        <Route path={\"/\"} element={<Navigate to={PATH.PRE_JUNIOR} />} />\r\n        <Route path={PATH.PRE_JUNIOR} element={<PreJunior />} />\r\n        <Route path={PATH.JUNIOR} element={<Junior />} />\r\n        <Route path={PATH.JUNIORPLUS} element={<JuniorPlus />} />\r\n        // add routes\r\n        {/*он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n        <Route path={\"/*\"} element={<Error404 />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pages;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { PATH } from \"./Pages\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div id=\"menu\">\r\n      <h2>Select a page</h2>\r\n      <ul id=\"list\">\r\n        <NavLink to={PATH.PRE_JUNIOR}>\r\n          <li>Pre-junior</li>\r\n        </NavLink>\r\n        <NavLink to={PATH.JUNIOR}>\r\n          <li>Junior</li>\r\n        </NavLink>\r\n        <NavLink to={PATH.JUNIORPLUS}>\r\n          <li>Junior+</li>\r\n        </NavLink>\r\n        <NavLink to={\"/*\"}>\r\n          <li>Test Error404</li>\r\n        </NavLink>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Pages from \"./Pages\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n  return (\r\n    <div>\r\n      {/*в gh-pages лучше работает HashRouter*/}\r\n      <HashRouter>\r\n        <Header />\r\n\r\n        <Pages />\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HW5;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5-rrd-v6/HW5\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={s.App}>\r\n      <div>react homeworks:</div>\r\n      {/* <HW1 />\r\n      <HW2 />\r\n      <HW3 />\r\n      <HW4 /> */}\r\n      <HW5 />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}